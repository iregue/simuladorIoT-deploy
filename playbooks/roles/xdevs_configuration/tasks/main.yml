---
# tasks file for xdevs_configuration
- name: configure ficheros
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE FICHEROS$'
    backup: no
    state: present
    line: |
            Ficheros {{ item }} = new Ficheros("{{ item }}", period, userDirectory + "/data/{{ item }}/");
            super.addComponent({{ item }});
  loop: "{{ ficheros|reverse|list }}"

- name: configure nodos virtuales
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE NVIRTUAL$'
    backup: no
    state: present
    line: |
            NodoVirtual {{ item }} = new NodoVirtual("{{ item }}", period);
            super.addComponent({{ item }});
  loop: "{{ nodo_virtual|reverse|list }}"

- name: configure fog servers
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE FOGSERVER$'
    backup: no
    state: present
    line: |
            FogServer {{ item.name }} = new FogServer("{{ item.name }}", period, {{ item.krigingX }}, {{ item.krigingY }}, Arrays.asList({{ item.coordenadasNodosX }}), Arrays.asList({{ item.coordenadasNodosY }}) );
            super.addComponent({{ item.name }});
  loop: "{{ fog_server|reverse|list }}"

- name: configure data center
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE DATACENTER$'
    backup: no
    state: present
    line: |
            DataCenter {{ item }} = new DataCenter("{{ item }}", period);
            super.addComponent({{ item }});
  loop: "{{ data_center|reverse|list }}"

- name: configure conectores fogServer
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE CONECTOR$'
    backup: no
    state: present
    line: super.addCoupling({{ item.out }}.oOut, {{ item.in }}.iIn{{item.out|title }});
  loop: "{{ conectores|reverse|list }}"
  when: item.out_type == "fogServer"

- name: configure conectores NodoVirtual
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE CONECTOR$'
    backup: no
    state: present
    line: super.addCoupling({{ item.out }}.oOut, {{ item.in }}.iIn{{ item.out|title }});
  loop: "{{ conectores|reverse|list }}"
  when: item.out_type == "nodoVirtual"

- name: configure conectores ficheros
  lineinfile:
    path: "{{ gpt_path }}"
    insertafter: '^// ANSIBLE CONECTOR$'
    backup: no
    state: present
    line: super.addCoupling({{ item.out }}.oOut, {{ item.in }}.iInFichero);
  loop: "{{ conectores|reverse|list }}"
  when: item.out_type == "ficheros"

- name: configure fogserver.java Port initialize
  lineinfile:
    path: "{{ fog_server_path }}"
    insertafter: '^// ANSIBLE PORTINIT$'
    backup: no
    state: present
    line: |
            protected Port<Input> iIn{{ item.out|title }} = new Port<>("iIn{{ item.out|title }}");
            protected Input currentInput{{ item.out|title }} = null;
  loop: "{{ conectores|reverse|list }}"
  when: item.out_type == "nodoVirtual"

- name: configure fogserver.java kriging initialize
  lineinfile:
    path: "{{ fog_server_path }}"
    insertafter: '^// ANSIBLE PORTINIT$'
    backup: no
    state: present
    line: double krigingiIn{{ item|title }} = 0.0;
  loop: "{{ nodo_virtual|reverse|list }}"

- name: configure fogserver.java constructor
  lineinfile:
    path: "{{ fog_server_path }}"
    insertafter: '^// ANSIBLE CONSTRUCTOR$'
    backup: no
    state: present
    line: super.addInPort(iIn{{ item.out|title }});
  loop: "{{ conectores|reverse|list }}"
  when: item.out_type == "nodoVirtual"

- name: configure fogserver.java deltext
  lineinfile:
    path: "{{ fog_server_path }}"
    insertafter: '^// ANSIBLE DELTEXT$'
    backup: no
    state: present
    line: |
            currentInput{{ item|title }} = iIn{{ item|title }}.getSingleValue(); 
            if(currentInput{{ item|title }} != null) {
              processInput(currentInput{{ item|title }});
              krigingiIn{{ item|title }} += currentInput{{ item|title }}.getRadiacion();
              krigingDate = currentInput{{ item|title }}.getDate();
            }
  loop: "{{ nodo_virtual|reverse|list }}"

- name: configure fogserver.java deltext
  lineinfile:
    path: "{{ fog_server_path }}"
    insertafter: '^// ANSIBLE KRIGING_ADD_VALUES$'
    backup: no
    state: present
    line: |
            if(krigingiIn{{ item|title }} != 0.0){
              valores.add(krigingiIn{{ item|title }}/100);
            }
  loop: "{{ nodo_virtual|reverse|list }}"

- name: configure dataCenter.java Port initialize
  lineinfile:
    path: "{{ data_center_path }}"
    insertafter: '^// ANSIBLE PORTINIT$'
    backup: no
    state: present
    line: |
            protected Port<Input> iIn{{ item.name|title }} = new Port<>("iIn{{ item.name|title }}");
            protected Input currentInput{{ item.name|title }} = null;
  loop: "{{ fog_server|reverse|list }}"

- name: configure dataCenter.java constructor
  lineinfile:
    path: "{{ data_center_path }}"
    insertafter: '^// ANSIBLE CONSTRUCTOR$'
    backup: no
    state: present
    line: super.addInPort(iIn{{ item.name|title }});
  loop: "{{ fog_server|reverse|list }}"

- name: configure dataCenter.java deltext
  lineinfile:
    path: "{{ data_center_path }}"
    insertafter: '^// ANSIBLE DELTEXT$'
    backup: no
    state: present
    line: |
            Collection<Input> collection{{ item.name|title }} = iIn{{ item.name|title }}.getValues();
            
            if(collection{{ item.name|title }} != null) {
              try {
              	storeCollection(collection{{ item.name|title }});
              } catch (IOException e1) {
              	e1.printStackTrace();
              }
            }
  loop: "{{ fog_server|reverse|list }}"

...
